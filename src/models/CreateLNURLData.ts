/* tslint:disable */
/* eslint-disable */
/**
 * lnbits client
 * API for LNbits, the free and open source bitcoin wallet and accounts system with plugins.
 *
 * The version of the OpenAPI document: 0.10.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateLNURLData
 */
export interface CreateLNURLData {
    /**
     * 
     * @type {string}
     * @memberof CreateLNURLData
     */
    descriptionHash: string;
    /**
     * 
     * @type {string}
     * @memberof CreateLNURLData
     */
    callback: string;
    /**
     * 
     * @type {number}
     * @memberof CreateLNURLData
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof CreateLNURLData
     */
    comment?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateLNURLData
     */
    description?: string;
}

/**
 * Check if a given object implements the CreateLNURLData interface.
 */
export function instanceOfCreateLNURLData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "descriptionHash" in value;
    isInstance = isInstance && "callback" in value;
    isInstance = isInstance && "amount" in value;

    return isInstance;
}

export function CreateLNURLDataFromJSON(json: any): CreateLNURLData {
    return CreateLNURLDataFromJSONTyped(json, false);
}

export function CreateLNURLDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLNURLData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'descriptionHash': json['description_hash'],
        'callback': json['callback'],
        'amount': json['amount'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function CreateLNURLDataToJSON(value?: CreateLNURLData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description_hash': value.descriptionHash,
        'callback': value.callback,
        'amount': value.amount,
        'comment': value.comment,
        'description': value.description,
    };
}

